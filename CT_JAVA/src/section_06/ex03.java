package section_06;
import java.util.*;

public class ex03 {
    public int[] solution(int N, int[] arr) {
        for (int i = 1; i < N; i++) {
            int tmp = arr[i];
            int j;
            for (j = i-1; j >= 0; j--) {
                if (arr[j] > tmp)
                    arr[j + 1] = arr[j];
                else
                    break;
            }
            arr[j + 1] = tmp;
        }
        return (arr);
    }
    public static void main(String[] args) {
        ex03 T = new ex03();
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] arr = new int[N];
        for (int i = 0; i < N; i++) arr[i] = sc.nextInt();
        for (int x : T.solution(N, arr)) System.out.print( x + " ");
        sc.close();
        
    }
}

/** 입출력
6
11 7 5 6 10 9
=> 5 6 7 9 10 11
*/

/** 배울점
1. 삽입 정렬이란
    - 현재 요소 tmp를 '정렬된 앞쪽 부분'과 비교하면서 위치를 찾고, 만약 현재요소보다 큰 요소를 만나면 그 요소를 한칸 뒤로 밀어내면서 오른쪽으로 이동시킨다
    - 현재 요소는 '그저 계속 들고 있는 채'로, 정렬된 앞쪽 부분과 비교하면서 + 정렬된 앞쪽이 더 크면 '교환'이 아니라 '한칸 뒤로 밀어내기'를 한다
    - ex) i=1, j=1-1=0 / 원래 배열 11, 7, 5, 6, 10, 9 라면 -> 원래 7을 11과 비교해서 11이 더 크니까 11을 한 칸 뒤로 밀어내기 -> '11 11' 5 6 10 9 -> j = -1로 for 끝났으니까 arr[j+1] 에 tmp를 넣어준다 -> 7 11 5 6 10 9
    - ** 즉 삽입 정렬은 앞쪽으로 진행하면서 덮어쓰면서 밀어내기 하고 맨 마지막 멈춘 j의 +1자리에 tmp를 넣는것이다 **

2. i = 0, j = i-1
    - i가 1부터 시작하는 이유는 '정렬된 앞쪽 부분'을 비교하기 위해서고, i가 1부터 시작하면 0번째는 '정렬된 상태'가 된다
    - 삽입정렬은 '현재요소 보다' 앞쪽으로 진행해야 하니까 j = i-1로 시작해서 j--가 이루어진다
    - 이렇게 하면 현재요소 i를 기준올 앞쪽을 살펴보면서 더 크면 '교환'이 아니라 '앞쪽끼리' 오른쪽으로 밀어내고 덮어쓰기 한다 -> 11 7 5 6 10 9에서 '11 11' 5 6 10 9
    - j <= 0 이므로 j가 인덱스를 벗어나 -1이 되거나 || arr[j]보다 현재 요소 tmp가 더 크면 해당 j 인덱스에서 멈춘다(break) -> 이렇게 끝났을 때 arr[j+1] = tmp 해서 현재요소를 멈춘 부분+1에 넣어주는 것이다
*/

/* 해설
1. 요약
    - 나(i)는 가만히 있고 '정렬된 앞쪽 부분'과 비교하면서 '정렬된 앞쪽 끼리 오른쪽으로 밀어내기' 다 시키기고
    - 더 이상 비교할 게 없거나 || 정렬된 앞쪽 부분이 현재요소보다 크면 멈추고 -> arr[j+1]자리에 tmp를 '삽입한다'

2. 삽입정렬인 이유
    - 현재 요소를 들고 있으면서 '정렬된 앞쪽 부분'과 비교하고 -> 정렬된 앞쪽'끼리' 덮어쓰면서 밀어내기가 끝나면 그 위치+1에 '삽입'하는 것이다

3. 선택정렬 <-> 삽입정렬
    - 선택정렬: 내 뒤에 있는 것들 중 가장 작은 것을 찾아서 교환
    - 삽입정렬: 내 앞에 있는 것들끼리 밀어내기 하면서 멈춘부분 바로 뒤에 삽입 -> 밀어내기 했으니까 삽입해도 ㄱㅊ -> '11 11' 5 6 10 9 -> '7' 11 5 6 10 9
*/