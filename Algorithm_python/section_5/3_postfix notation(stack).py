'''
개념
1. 후위표기식: 352*+ = 5 * 2 + 3
2. 기존 중위표기식의 경우 컴퓨터 연산 어려움
3. 352*72-/+
	=3 (52*)72-/+
    =3 10 (72-) / +
    =3 (10 5 /) +
    =3 2 +
    =5
    =연산자 만나면 바로 앞에 있는 것이 피연산자
4. 후위연산은 보통 스택으로 푼다
5. 피연산자 만나면 출력한다
6. */, +- 순
	=만약 스택에 + 있고, 바깥에 - 만났다?
    =스택과 비교해서 우선순위가 스택이 같거나 or 빠르면 '스택 먼저'
    =스택이 더 후순위면 그냥 스택에 들어간다
7. () 괄호쌍 중 ( 는 바로 스택에 들어감
	= ) 있을 때 스택에 있는거 꺼낸다
    = ( 이거 바로 뒤에 연산자 만나면 바로 연산처리한다
    = 괄호가 우선이므로!
'''
arr = input()				#3+5*2/(7-2) 예시 담아준다
stack = []					#스택
result = ''					#나중에 출력할 결과물

for x in arr:				#하나하나 꺼내서
    if (x.isdecimal()):		#만약 십진수면
        result += x			#결과물에 더해준다(사실상 바로 출력과 같다)
    else :
        if (x == '('):		#여는 괄호 ( 면
            stack.append(x)	#스택에 들어간다
        elif (x == '*' or x == '/'):									#내가 현재 * /일 때
            while (stack and (stack[-1] == '*' or stack[-1] == '/')):	#stack에 자료가 있고, * / 일때 순위는 스택이 우선
                result += stack.pop()									#따라서 스택에 * / 있으면 계속 다 뺀다
            stack.append(x)												#스택에 있는 * / 다 뻈으면 이제서야 바깥 */ 스택
        elif (x == '+' or x == '-'):
            while (stack and stack[-1] != '('):							#어떤게 스택에 오더라도 다 꺼낸다 (유일하게 '(' 여는 괄호 전까지 다 꺼낸다)
                  result += stack.pop()
            stack.append(x)
        elif (x == ')'):
            while (stack and stack[-1] != '('):							#짝짝꿍인 스택에 여는 괄호 ( 까지
                result += stack.pop()									#여는 괄호 전까지 모두 pop
            stack.pop()													#여는 괄호도 pop

while (stack):															#스택에 어느 거라도 남아있을 때
    result += stack.pop()												#스택 내 모두 pop한다

print(result)


'''
3+5*2/(7-2)
= 352*72-/+

3*(5+2)-9
= 352+*9-
'''