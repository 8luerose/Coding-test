'''
개념

1. 문제 해석: 무게 추가 있고, 그릇이 있다. 이 무게추를 이용하여 물의 무게를 잴 수 있다. 이때, 측정이 불가한 물의 무게는 몇 가지가 있는가?
	= 무게추 3개 예를 들어 1,2,6 이다. 그리고 이것의 합은 9이다
	= 1 ~ 9까지의 무게를 측정할 수 있다
	= 예를 들어 4라는 물 무게를 재기 위해서는, ([] + 2) : 6 이런 식으로 하면 된다
	= 즉, 무게추를 양팔 저울에 각각 올려서 물의 무게를 잴 수 있다
	= 잴 수 없는 물의 무게가 몇 가지 있는지 구하라는 문제이다
2. 예시
	= 예를 들어 무게 추가 1,5,7이라고 하자. 이때 S = 13 이 된다
	= 1 ~ 13까지의 무게를 측정할 수 있다
	= 예를 들어 4라는 물 무게를 재기 위해서는, ([] + 1) : 5 이런 식으로 하면 된다
	= 이렇게 하면 1,2,3,4,5,6,7,8,11,12,13 이렇게 11가지의 물의 무게를 잴 수 있다
	= 응? 그럼 나머지 9,10은 어떻게 잴 수 있냐?
	= 응 못재~
	= 아하! 13까지 중 11가지는 잴 수 있고, 나머지 2개는 못 재는 구나! (13 - 11 = 2)
	= 측정 불가한 물의 무게, 정답은 2가지!

3. 과정
	= 0g으로 출발해서 3가닥으로 뻗어나간다
**	= 무게추 위치: 왼, 오, 측정x		(물의 무게는 반대편)
	= 왼: +n, 오: -n, 측정x: 0
	= ex 1,5,7이라면
	= 0g으로 출발해서 +1, -1, 0 이 된다
	= 만약, 왼쪽에 무게추를 놓았다면, 0 +1 해서 1g이 된다
	= 이어서, 5g 무게추를 왼쪽에 놓았다면 1 + 5 해서 6g이 된다 or 5g의 무게추를 오른쪽에 놓았다면 1 - 5 해서 -4g이 된다
	= 어? -4g은 무슨 상황이지? == 왼+1 _ 오-5 인 상황 == []+1 : 5 이런 상황
	= 어? 그러면 []는 4g이네! 아하! 물의 무게가 4g인 경우도 잴 수 있구나!
	= -4g은 절댓값으로 해서 4g도 잴 수 있다는 뜻!!
	= 그런데! 왼 : 오 == 오 : 왼 대칭이므로 -4g는 굳이 안재도 됨
**	= 아하! 음수 '-' 나오면 안 재도 되는구나!!

4. set() 자료형: 중복을 허용하지 않는다 + 중복을 제거하면서 값을 제거해준다 + 정렬까지 해준다
	= set()은 추가 시 .add()를 사용한다
	= set()은 삭제 시 .remove()를 사용한다
	= 리스트처럼 .append() .pop() 사용 불가!!
5. 왜 set()을 쓰는가?
	= 중복인 값이 분명히 생긴다! 여러가지 경우의 수가 나오기 때문!
	= 근데 굳이 필요없잖아? 왜? "물의 무게는 그 무게 잴 수 있다며? 그럼 안해도 되는 거 아님?ㅋㅋ" 이렇게 된다
6. set() 자료형은 len(result( = set() 자료형 변수) ) 이렇게 잴 수 있다!
'''

def DFS(L, sum):							# L = 무게추 번호. sum = 물의 무게
	global result							# result를 set()자료형 변수로 사용했으니까, 전역변수로 처리해줘야 .add() 가능
	if (L == n):							# base case, 무게추 갯수가 모두 사용했다면 종료 L == n
		if (0 < sum <= S):					# 물의 무게가 음수인 경우는 절댓값으로 처리(= 왼:오 = 오:왼 대칭 경우니까) + 물의 무게가 무게추 총합보다 같거나 작을때
			result.add(sum)					# set() 자료형 변수에 '잴 수 있다고 판단된 물의 무게'를 추가
	else :								# 무게추가 왼,오,측정x 세 가지 경우인 경우로 가닥을 뻗는다
		DFS(L + 1, sum + arr[L])		# 무게추 '왼쪽'에 놓는 경우 '+' ex)1,5,7 중 1을 왼쪽에 놓을 경우
		DFS(L + 1, sum - arr[L])		# 무게추 '오른쪽'에 놓는 경우 '-' ex)1,5,7 중 1을 오른쪽에 놓을 경우
		DFS(L + 1, sum)					# 무게추 측정x 이면 그냥 다음 레벨로 가기만 한다 ex)1,5,7 중 1 안재면 그냥 다음 레벨로 가기만 한다


n = int(input())
arr = list(map(int, input().split()))
S = sum(arr)
result = set()								# set() 자료형 변수 초기화 == arr = [0] 리스트 초기화 하는 것과 같다

DFS(0, 0)									# DFS(0, 0)으로 시작. 물의 무게 0g부터 왼, 오, x 할거니까
print(S - len(result))						# 물의 무게 총합 - (잴 수 있었던 무게들 <- set()자료형 변수도 len()됨) = 측정 불가한 물의 무게 갯수

'''
3
1 5 7
=
2
'''